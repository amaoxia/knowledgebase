<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
   http://www.springframework.org/schema/aop 
   http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
   http://www.springframework.org/schema/tx
   http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
   http://www.springframework.org/schema/jee
   http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
   http://www.springframework.org/schema/context
   http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<context:component-scan base-package="com">   
   	 	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>   
	</context:component-scan>

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:config/jdbc.properties</value>
			</list>
		</property>
	</bean>

	<bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass">
			<value>${datasource.driverClassName}</value>
		</property>
		<property name="jdbcUrl">
			<value>${datasource.url}</value>
		</property>
		<property name="user">
			<value>${datasource.username}</value>
		</property>
		<property name="password">
			<value>${datasource.password}</value>
		</property>
		<property name="acquireIncrement">
			<value>${c3p0.acquireIncrement}</value>
		</property>
		<property name="initialPoolSize">
			<value>${c3p0.initialPoolSize}</value>
		</property>
		<property name="minPoolSize">
			<value>${c3p0.minPoolSize}</value>
		</property>
		<property name="maxPoolSize">
			<value>${c3p0.maxPoolSize}</value>
		</property>
		<property name="maxIdleTime">
			<value>${c3p0.maxIdleTime}</value>
		</property>
		<property name="idleConnectionTestPeriod">
			<value>${c3p0.idleConnectionTestPeriod}</value>
		</property>
		<property name="maxStatements">
			<value>${c3p0.maxStatements}</value>
		</property>
		<property name="numHelperThreads">
			<value>${c3p0.numHelperThreads}</value>
		</property>
	</bean>
	
	
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
	<!--  
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		-->
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
		<!--
		<property name="mappingResources">
			<list>
				<value>com/bluecloud/component/sys/entity/hbm/SysOrg.hbm.xml</value>
				<value>com/bluecloud/component/sys/entity/hbm/SysUser.hbm.xml</value>
				<value>com/bluecloud/component/sys/entity/hbm/SysMenu.hbm.xml</value>
				<value>com/bluecloud/component/sys/entity/hbm/SysRole.hbm.xml</value>
				<value>com/bluecloud/component/sys/entity/hbm/SysRoleMenu.hbm.xml</value>
				<value>com/bluecloud/component/sys/entity/hbm/SysDict.hbm.xml</value>
				<value>com/bluecloud/component/sys/entity/hbm/SysUserRole.hbm.xml</value>
				<value>com/bluecloud/component/sys/entity/hbm/SysLog.hbm.xml</value>
			</list>
		</property>
		-->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					${hibernate.dialect}
				</prop>
				<prop key="hibernate.show_sql">
					${hibernate.show_sql}
				</prop>
				<prop key="hibernate.jdbc.fetch_size">
					${hibernate.jdbc.fetch_size}
				</prop>
				<prop key="hibernate.jdbc.batch_size">
					${hibernate.jdbc.batch_size}
				</prop>
				<!-- 配置二级缓存 ，启用二级缓存-->
				<prop key="hibernate.cache.use_second_level_cache">
					${hibernate.cache.use_second_level_cache}
				</prop>
				<prop key="hibernate.cache.use_query_cache">
					${hibernate.cache.use_query_cache}
				</prop>
				<prop key="hibernate.cache.region.factory_class">
					${hibernate.cache.region.factory_class}
				</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<!-- 最大抓取深度 -->
				<prop key="hibernate.max_fetch_depth">1</prop>
				<!-- 格式SQL -->
				<prop key="hibernate.format_sql">true</prop>
				
			</props>
		</property>
		<!--<property name="lobHandler" ref="lobHandler" /> --><!-- Spring下处理blob字段的配置 -->
		<property name="packagesToScan" value="com.**.po"/>
	</bean>
	
	<!-- Spring下处理blob字段的配置 -->
	<!--
	<bean id="lobHandler" lazy-init="true"
		class="org.springframework.jdbc.support.lob.OracleLobHandler">
		<property name="nativeJdbcExtractor" ref="nativeJdbcExtractor" />
	</bean>
	<bean id="nativeJdbcExtractor"
		class="org.springframework.jdbc.support.nativejdbc.CommonsDbcpNativeJdbcExtractor"
		lazy-init="true" />
	-->
	
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">   
   	 <tx:attributes>   
        <tx:method name="save*" propagation="REQUIRED" />   
        <tx:method name="add*" propagation="REQUIRED" />   
        <tx:method name="create*" propagation="REQUIRED" />   
        <tx:method name="insert*" propagation="REQUIRED" />   
        <tx:method name="update*" propagation="REQUIRED" />   
        <tx:method name="merge*" propagation="REQUIRED" />   
        <tx:method name="del*" propagation="REQUIRED" />   
        <tx:method name="remove*" propagation="REQUIRED" />   
        <tx:method name="get*" propagation="REQUIRED" read-only="true"/>   
        <tx:method name="count*" propagation="REQUIRED" read-only="true"/>   
        <tx:method name="find*" propagation="REQUIRED" read-only="true"/>   
        <tx:method name="list*" propagation="REQUIRED" read-only="true"/>   
         <tx:method name="*" read-only="true" /> 
    </tx:attributes>   
</tx:advice>   
 
<aop:config expose-proxy="true">   
    <aop:pointcut id="txPointcut" expression="execution(* com..service..*.*(..))" />   
    <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>  
</aop:config> 

</beans>
